generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String?  @unique
  password  String?
  createdAt DateTime @default(now())
}

model Table {
  id             Int              @id @default(autoincrement())
  number         Int              @unique
  qrCodeUrl      String
  createdAt      DateTime         @default(now())
  orders         Order[]
  Recommendation Recommendation[]
}

model Product {
  id             Int              @id @default(autoincrement())
  name           String
  description    String?
  price          Decimal          @db.Decimal(10, 2)
  isActive       Boolean          @default(true)
  createdAt      DateTime         @default(now())
  orderItems     OrderItem[]
  Recommendation Recommendation[]
}

model Order {
  id        Int         @id @default(autoincrement())
  tableId   Int
  table     Table       @relation(fields: [tableId], references: [id])
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  items     OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int     @default(1)
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Recommendation {
  id        Int      @id @default(autoincrement())
  tableId   Int?
  table     Table?   @relation(fields: [tableId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  reason    String
  score     Float
  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}
